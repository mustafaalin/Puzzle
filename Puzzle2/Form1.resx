<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAUDBAICAgICAgICAgIGBwIIBwcHBwMCAgkCBQ8HBgYDBREH
        ChALBwgOCQUGGBUMGhERHxMfBxciGBYeGBAeHx7/2wBDAQUFBQcGBw4ICAwUFBEUEh4eFB4UHh4SEhQS
        EhgeFBQSFBISFBQSEhISFBIeEhISEhISEhISEhQSEhISEhISEhL/wAARCALQBQADASIAAhEBAxEB/8QA
        GQABAQEBAQEAAAAAAAAAAAAAAAIBAwQI/8QAKRABAAICAQMEAQMFAAAAAAAAAAISARFhEyMxIjIzQvAD
        kZMhQVFTc//EABgBAQEBAQEAAAAAAAAAAAAAAAACAwEE/8QAGBEBAQEBAQAAAAAAAAAAAAAAAAISIhH/
        2gAMAwEAAhEDEQA/APjRoxQACm7GCUtNsBS0yl1DuMHGm2NKdkGADdsFJabY1KgABSf6Ar0GNUnTAAaD
        Epbs2wBuwYA1gKbsYANYCQAGm2AN2wAawAGsAaMAaMAGsAbs2wBrAAAAawBspDAUyXlTAS0YCm7NsAbt
        gCW7GAAANYANNsAbs2wBsZDAGgADAGjAGjAF24TtgKaCfcCiLGiQY0DaksAbtgpTRgC0gJFW4SApIoEq
        SAG2ApZbhIkUJAdIm8OagLcFuEih0SCtJJJBKlREgKEgKtwreHMFuiQVpApIkVvBvDmC3TeDeEq7YjSu
        odRzULVZW3FStC2dRInSHa5JDdrWROpT42IRTroMEuLupyGouU09Rg5Iu9yMv9nxJGjrzAPOxGsAaxoo
        GNYkbs2wBowUACVAAkAAAAAAAAAAAAAAAAAFAAkAUACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFAAkBoMAAABrAUDWCRrAUNBgNYNSACgGNSAxooGNEgApjWChYkEsGsFNVbhIJBj
        RSgSkUBbhSQSClAREhbgSKFJUCloErSpIpAqKQOlSSpIOkCafjBZvAAOmlSQzqLQWaIdaOQDFiAAAADN
        5aAAAAAAAAAAAAAAAAoAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyuWgAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAzeWgAAAAAAAKBrBI0YA0Y0AABSQUpKkgwBQAA1jQBQkSoSAoSADGilC
        QHQSpIRAkLAAN4N4c1KQKTbhQtKkgh0s0FrBCwecBkyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkvLQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF
        AAkBoADAAAGjAaxoAAKAAYAoGsAawAapIkGDVAADoktwpIlR20i0qBQAkQoIkhWhSVRErGfZqxAsEvOA
        yAAAAAAGZxpoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0GDWAAANYAAADQUMawS0AAAUACWA1ShjQGDQGDQACI
        KASJAUCkqFgJAUAgJKJSASoAFoByASkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAawAAAAAaxtvQDAAAAAABrAa
        DAaSGKBoAwAU1SQSKSAKSpIFUgpQCkqEiVAKBzV2/wA2CgkAAAAAApKgAAAAcgEpAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAZvINGgDGklDBokY00CgASKSCgUkSACgBQxrGgoBIKSAkFfRQRSKASpQ
        tMSqkgpYJQjuCwW84AyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrAAAAABrABrAGjAaMbEVIDBLQA
        AAA2bUACVDGihjQBQCQABLokUkBIrIoBYFQQAAr4yIJHIASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1gA
        AAAAAAN2wBrBoMGgDAAawBoAAApgChoCUircJUKASApKlJS6JEqUkASpIodAEiQFLUktwoEqSA6VaCR5
        t5aAyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaMBQAJAAAAAAAAAAGsaAMAawaAMaKJdP6bYChpEEpUkBQqP
        rSoAEgoEiVAKFJFRSpKkyAAKqAAWCVCFCYgt1ECRyAGQADWDJeQaAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AA1gAAAAAADWADWNYA1jQYDQBgDRgoaAlQAChIChIJUJFClOagUJAV20iRWRRUFqASgSW4FAACAEpGby
        0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABlcg0AAAAAAAAAAAAAUAAACQAGgxQDQGDWA0BKgFAAkSAoAEqFKi
        mokUJFBbgkoS1SpKgAATEBSEAJSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAGpGDWA
        DQGA0ABQAJUAAoAAAEilVwJTbgAEyUCgFFcJUlW8CoA5pd3JS1LQJQ5ACQZvLQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABoAwAGsaAAoAEgDAaAKFRSAqSVAAAkAAAUACVJUlSgSoAABQCRyAEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdMaDAAAAaMAAaAADBoAAoAAAEqBQAACRQJSoSCgFAAkB
        QoASlRELcCgIgCAEpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABlctBrBoMAUNY0S
        AACqpUKSCgSpKgABKVRSKUSFJAVUSApKgSpKgUAkcgBIAAAAAAAAAAAAzeWgAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAADJeWgAAAAAAAN2KYNYoGglIAoAEgAoAEqFAAAJAASGxSjYAOiRSQAAABJbgtwlQwBKQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgMBQNYJGjGgAAMbFihoxqVAaBIpICkihQRJAJAUOiQ
        EpUkFKCoCQAYAlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQFAMEjRjVAAkAANKS
        oEgAqoAoABICgAABQAAKDeAlKQBSAEpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoKYAJA
        AaMBQ0FJY0EgAAAAAKABKkgKUAAlSgTUUkE6FJUOgCRIKUAtEkjkAJAAAAAAZXLQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAaxoMAAGgAxoAAoAEqSKFJAEgApSnNQJdEgsAEJBShURIkSoFCgT7EiABI
        AAMrloAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANY1gNA0AwaKGNTXKkqASoAA0qqVA
        nQMUNUCQqVAEsaKDRoUB2/zaVACq4FiXnASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADI+WgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAADWChpEEgMAaMAaAKYAoAAapKkiVW4SCVCVW4AAFAJB0ikABQLSFRSEqSoEAJSAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAANYAAANY0GAANYA0ABjWA0AUAAAAAApIAqIACVAJAUKUlSVhIAAAcg
        BkAAACgAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0GAAAAAAA0GDWA0AGDQAAUAACgEgoAEgoqAA
        AAKBOvTtQsWgARQlSRaABkAAzeWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdMAAABrAAaA
        waAAwAaRAAFKSpICgEgkBSVCgEqSoUkBKgUtQCUJUAtyAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAANYA1gADQY0AAAGADQADQCgFAJUCgASAAAAKSAKrhJbgW6iN4ASlSoxUhyASkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAlrABoAoY0EsaxoAAMaAChIoFAAkAVVKgAAABYAIAULA
        AK4K4WgHIAZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAyXloMl5aAAAAAAAAAAAAAAAAAAAAAAyPloAAAAAAAAAAAAAAAAANBjQFAAAAkAkA
        AoAEqAAUJUCGgpwUCXZUkAFJAUkUBXAAJUAOQAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AZHy1kfIK0xrBQDRLAAaxrAaMbEFIaAApQkUJUlSQBSYqAC3AJAKigAEihQApIkUAkUlQgBKQAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAxrABrAGjGgAADGgAKABKlCVAJFW4AAAAEgAJAUpRUAF
        EhIAqosmlaBDkAJAAAAAAAAAAABQAJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGsAaDAAaDBoKBjRIAACgSA
        KUCQUlQAVAAAEqSKFJFAKSpK1dtMgkIFoiC1oAHIAZAAA1gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
</value>
  </data>
</root>